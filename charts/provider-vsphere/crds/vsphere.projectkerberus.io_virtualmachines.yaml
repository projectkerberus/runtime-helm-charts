apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: virtualmachines.vsphere.projectkerberus.io
spec:
  group: vsphere.projectkerberus.io
  names:
    categories:
    - crossplane
    - managed
    - vsphere
    kind: VirtualMachine
    listKind: VirtualMachineList
    plural: virtualmachines
    singular: virtualmachine
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.atProvider.name
      name: LABEL
      type: string
    - jsonPath: .status.atProvider.numCPU
      name: CPU
      type: string
    - jsonPath: .status.atProvider.memoryMB
      name: MEM
      type: string
    - jsonPath: .status.atProvider.disk
      name: DISK
      type: string
    - jsonPath: .status.atProvider.network
      name: NETWORK
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualMachine is a managed resource that represents a VSphere virtual machine.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VirtualMachineSpec defines the desired state of a virtual machine.
            properties:
              deletionPolicy:
                description: DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: VirtualMachineParameters defines the desired attributes for a VSphere Virtual Machine.
                properties:
                  cpuHotAddEnabled:
                    description: CpuHotAddEnabled allow CPUs to be added to this virtual machine while it is running.
                    type: boolean
                  cpuHotRemoveEnabled:
                    description: CpuHotRemoveEnabled allow CPUs to be removed to this virtual machine while it is running.
                    type: boolean
                  datacenter:
                    description: Datacenter is the datacenter to put this virtual machine in.
                    type: string
                  datastore:
                    description: Datastore the path of the virtual machine's datastore.
                    type: string
                  disk:
                    description: Disk
                    properties:
                      controller:
                        description: Disk controller type
                        type: string
                      label:
                        description: Label of an existing disk
                        type: string
                      link:
                        description: Link specified disk.
                        type: boolean
                      mode:
                        description: 'Mode disk mode. One of:'
                        type: string
                      persist:
                        description: Persist attached disk
                        type: boolean
                      size:
                        description: Size size of disk.
                        type: string
                    required:
                    - size
                    type: object
                  firmware:
                    description: 'Firmware interface to use on the virtual machine. Can be one of `bios` or `EFI`. Default: bios.'
                    type: string
                  folder:
                    description: Folder the path to the folder to put this virtual machine in, relative to the datacenter that the resource pool is in.
                    type: string
                  guestId:
                    description: 'GuestId define the guest ID for the operating system type. For a full list of possible values, see: - https://code.vmware.com/apis/358/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html Default: other-64.'
                    type: string
                  isoDatastore:
                    description: IsoDatastore is the datastore for ISO file.
                    type: string
                  isoPath:
                    description: IsoPath is the ISO file path.
                    type: string
                  memoryHotAddEnabled:
                    description: MemoryHotAddEnabled allow memory to be added to this virtual machine while it is running.
                    type: boolean
                  memoryMB:
                    description: 'MemoryMB is the size of the virtual machine''s memory, in MB. Default: 1024 (1 GB).'
                    format: int32
                    type: integer
                  name:
                    description: Name of the virtual machine.
                    type: string
                  network:
                    description: Network
                    properties:
                      adapter:
                        description: Adapter network adapter type.
                        type: string
                      address:
                        type: string
                      name:
                        description: Name of an existing network
                        type: string
                    type: object
                  numCPU:
                    description: 'NumCpu define the total number of virtual processor cores to assign to this virtual machine. Default: 1'
                    format: int32
                    type: integer
                  pool:
                    description: Pool is the resource pool to put this virtual machine in.
                    type: string
                  powerOn:
                    description: 'On power on VM. Default: true'
                    type: boolean
                  storagePod:
                    type: string
                  version:
                    description: Version is the ESXi hardware version.
                    type: string
                required:
                - datacenter
                - name
                - pool
                type: object
              providerConfigRef:
                description: ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: VirtualMachineStatus represents the observed state of a virtual machine.
            properties:
              atProvider:
                description: VirtualMachineObservedAttrs is used to show the observed state of the virtual machine resource on VSphere.
                properties:
                  disk:
                    type: string
                  firmware:
                    type: string
                  memoryMB:
                    format: int32
                    type: integer
                  name:
                    type: string
                  network:
                    type: string
                  numCPU:
                    format: int32
                    type: integer
                  uuid:
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True, False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
